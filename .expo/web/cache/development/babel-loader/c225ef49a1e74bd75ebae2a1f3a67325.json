{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SearchBar from \"../components/SearchBar\";\nimport yelp from \"../api/yelp\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SearchScreen = function SearchScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      term = _useState2[0],\n      setTerm = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      results = _useState4[0],\n      setResults = _useState4[1];\n\n  var searchApi = function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(yelp.get(\"/spiderman\", {\n              params: {\n                info: \"mini_info\",\n                limit: \"10\",\n                page: \"1\",\n                titleType: \"movie\"\n              }\n            }));\n\n          case 2:\n            response = _context.sent;\n            setResults(response.data.results);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(SearchBar, {\n      term: term,\n      onTermChange: setTerm,\n      onTermSubmit: searchApi\n    }), _jsxs(Text, {\n      children: [\"We have found \", results.length]\n    })]\n  });\n};\n\nvar style = StyleSheet.create({});\nexport default SearchScreen;","map":{"version":3,"names":["React","useState","SearchBar","yelp","SearchScreen","term","setTerm","results","setResults","searchApi","get","params","info","limit","page","titleType","response","data","length","style","StyleSheet","create"],"sources":["C:/Users/ignac/Documents/Codes/The Complete RN Hooks/food/src/screens/SearchScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport yelp from \"../api/yelp\";\r\n\r\nconst SearchScreen = () => {\r\n  const [term, setTerm] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n\r\n  const searchApi = async () => {\r\n    const response = await yelp.get(\"/spiderman\", {\r\n      params: { info: \"mini_info\", limit: \"10\", page: \"1\", titleType: \"movie\" },\r\n    });\r\n    setResults(response.data.results);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <SearchBar term={term} onTermChange={setTerm} onTermSubmit={searchApi} />\r\n      <Text>We have found {results.length}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst style = StyleSheet.create({});\r\n\r\nexport default SearchScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,SAAP;AACA,OAAOC,IAAP;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;EACzB,gBAAwBH,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOI,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAA8BL,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOM,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,IAAMC,SAAS,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACON,IAAI,CAACO,GAAL,CAAS,YAAT,EAAuB;cAC5CC,MAAM,EAAE;gBAAEC,IAAI,EAAE,WAAR;gBAAqBC,KAAK,EAAE,IAA5B;gBAAkCC,IAAI,EAAE,GAAxC;gBAA6CC,SAAS,EAAE;cAAxD;YADoC,CAAvB,CADP;;UAAA;YACVC,QADU;YAIhBR,UAAU,CAACQ,QAAQ,CAACC,IAAT,CAAcV,OAAf,CAAV;;UAJgB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAlB;;EAOA,OACE,MAAC,IAAD;IAAA,WACE,KAAC,SAAD;MAAW,IAAI,EAAEF,IAAjB;MAAuB,YAAY,EAAEC,OAArC;MAA8C,YAAY,EAAEG;IAA5D,EADF,EAEE,MAAC,IAAD;MAAA,6BAAqBF,OAAO,CAACW,MAA7B;IAAA,EAFF;EAAA,EADF;AAMD,CAjBD;;AAmBA,IAAMC,KAAK,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAd;AAEA,eAAejB,YAAf"},"metadata":{},"sourceType":"module"}