{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from \"react\";\nimport yelp from \"../api/yelp\";\nexport default (function () {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  var searchApi = function _callee(searchTerm) {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(yelp.get(\"/search\", {\n              params: {\n                limit: 50,\n                term: searchTerm,\n                location: \"san jose\"\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            setResults(response.data.businesses);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setErrorMessage(\"Something went wrong\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    searchApi(\"pasta\");\n  }, []);\n  return [searchApi, results, errorMessage];\n});","map":{"version":3,"names":["useState","useEffect","yelp","results","setResults","errorMessage","setErrorMessage","searchApi","searchTerm","get","params","limit","term","location","response","data","businesses"],"sources":["C:/Users/ignac/Documents/Codes/The Complete RN Hooks/food/src/hook/useResult.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport yelp from \"../api/yelp\";\r\n\r\nexport default () => {\r\n  const [results, setResults] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const searchApi = async (searchTerm) => {\r\n    try {\r\n      const response = await yelp.get(\"/search\", {\r\n        params: {\r\n          limit: 50,\r\n          term: searchTerm,\r\n          location: \"san jose\",\r\n        },\r\n      });\r\n      setResults(response.data.businesses);\r\n    } catch (err) {\r\n      setErrorMessage(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  // Call searchApi when component\r\n  // is first rendered.\r\n  // searchApi(\"pasta\");\r\n  useEffect(() => {\r\n    searchApi(\"pasta\");\r\n  }, []);\r\n\r\n  return [searchApi, results, errorMessage];\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP;AAEA,gBAAe,YAAM;EACnB,gBAA8BF,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOG,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAwCJ,QAAQ,CAAC,EAAD,CAAhD;EAAA;EAAA,IAAOK,YAAP;EAAA,IAAqBC,eAArB;;EAEA,IAAMC,SAAS,GAAG,iBAAOC,UAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAESN,IAAI,CAACO,GAAL,CAAS,SAAT,EAAoB;cACzCC,MAAM,EAAE;gBACNC,KAAK,EAAE,EADD;gBAENC,IAAI,EAAEJ,UAFA;gBAGNK,QAAQ,EAAE;cAHJ;YADiC,CAApB,CAFT;;UAAA;YAERC,QAFQ;YASdV,UAAU,CAACU,QAAQ,CAACC,IAAT,CAAcC,UAAf,CAAV;YATc;YAAA;;UAAA;YAAA;YAAA;YAWdV,eAAe,CAAC,sBAAD,CAAf;;UAXc;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAlB;;EAkBAL,SAAS,CAAC,YAAM;IACdM,SAAS,CAAC,OAAD,CAAT;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,OAAO,CAACA,SAAD,EAAYJ,OAAZ,EAAqBE,YAArB,CAAP;AACD,CA3BD"},"metadata":{},"sourceType":"module"}